
# vcf input file
vcffile='hasch_input_filtered_57k.vcf.gz'
# recalculate P
recalcP=False


#
# WHAT TO RUN SETTINGS
#
# just evaluate/visualize the solution
enable_evaluate_pairwise_solution=False
# just generate solution position list then exit
poslist_only=False
# just visualize the object function weights then exit
check_objwt_only=False


#
# FLANKING SNPS SETTINGS
#
# high confidence flanking snp count  (from strict SNP filetering), set to None to ignore flanking SNPs
flankcountfile='pos57k_ref5m-all.txt' 	#5M neighborhood snps
# factor to decrease marker weight per flanking SNPs
wtflank=[0.05, 0.2]  # [within neighborhood (100bp), adj10 (within 10bp)]
# minimum weight for marker
maxflanks_value=-0.1




#
# OBJECTIVE SETTINGS
# 
# use maximum pairwise allele mismatch objective for fixed markers to select (True), else use minimum markers (False)
enable_maximize_mismatches=True
# markers to select
maxmarkers=2000
# adjust maxmarkers to accomodate large number of short contigs
# exits if more are required after adjustment
adjust_maxmarkers=1.2


#
# PAIRWISE P CONSTRAINTS SETTINGS
# minimum allele mismatch per sample pair
minperpair=1


#
# REGION/INTERVAL CONSTRAINTS SETTINGS
#
# use bp (physical base pair length) to define region (True), else use marker index or number of input markers (False)
use_bp_intervals=True
# if use marker index above, number of markers per interval
maxinterval=100
# if use bp, bp length per region constraint
bp_per_segment=500000	# ~2000 for 1Gb genome, 200 for 100Mb chromosome
# minimum markers per bp region or marker index interval
minperinterval=1


#
# OUTPUT FILES GENERATION SETTINGS
#
# check for duplicated constraints shorter than buffer_p_tofile_len
buffer_p_tofile_len=5
# additional notes appended to the output LP filename (to document settings defined above) 
# for TEST
#note='max-wtflank100_m1_05_2_2_5m-' + intervalnote + '-' + str(minperinterval) + '-' + str(minperpair)

# for HASCH
#note='max-chrintonly-wtflank100_m1_05_2_2_5m-keepneighbor-' + intervalnote + '-' + str(minperinterval) + '-' + str(minperpair)

#
# PROCESSING/MEMORY MANAGEMENT SETTNGS
#
# columns to process per round  in generating P matrix, to minimize memory use for high  marker count 
#split_col=50000
#split_col=2000  
split_col=60000
